
import matplotlib.pyplot as plt
import numpy as np
import statistics as stats

# Some example data to display
x = np.linspace(0, 2 * np.pi, 400)
y = np.sin(x ** 2)

#fig, axs = plt.subplots(6)
#fig.suptitle('Vertically stacked subplots')
#axs[0].plot(x, y)
#axs[1].plot(x, -y)
#axs[2].plot(x, -y)
#axs[3].plot(x, -y)
#axs[4].plot(x, -y)
#axs[5].plot(x, -y)


x_Distance_80=[37828.0, 37908.0, 37988.0, 38068.0, 38148.0, 38228.0, 38308.0, 38388.0, 38468.0, 38548.0, 38628.0, 38708.0, 38788.0, 38868.0, 38948.0, 39028.0, 39108.0, 39188.0, 39268.0, 39348.0, 39428.0, 39508.0, 39588.0, 39668.0, 39748.0, 39828.0, 39908.0, 39988.0, 40068.0, 40148.0, 40228.0, 40308.0, 40388.0, 40468.0, 40548.0]
y_Distance_80=[343.2554860777932, 339.0144424430618, 343.03233173596436, 344.9139226268845, 345.0569554942932, 349.57488582518806, 350.01824564299216, 349.18850215497355, 348.5325829136891, 441.26843336397553, 1185.7385804584956, 414.8578116826552, 369.73547944863674, 361.8785230510272, 355.1114511528481, 350.2030834073592, 348.8285422429086, 348.47829049926924, 343.9466751152688, 338.0053460743596, 312.47664403133615, 342.3402340414349, 340.82675707023077, 343.4121270685363, 335.3767448579623, 326.2177777743459, 336.5644182703928, 338.25032860845977, 337.7226763869006, 338.06213087894605, 336.7498381718073, 339.30148213475906, 330.07650472739624, 338.0250958863238, 323.63526180088684]
v_Distance_80=38628.0
x_Distance_801=[38228.0, 38308.0, 38388.0, 38468.0, 38548.0, 38628.0, 38708.0, 38788.0, 38868.0, 38948.0, 39028.0]
y_Distance_801=[350.145346112149, 345.4217998098975, 346.54380061178347, 356.7390972981858, 434.87778054983636, 1188.3813579722594, 419.2841048891372, 362.99304048286024, 357.3053016351713, 349.08957553209683, 346.6752049116308]
v_Distance_801=38628.0
x_Distance_30=[38328.0, 38358.0, 38388.0, 38418.0, 38448.0, 38478.0, 38508.0, 38538.0, 38568.0, 38598.0, 38628.0, 38658.0, 38688.0, 38718.0, 38748.0, 38778.0, 38808.0, 38838.0, 38868.0, 38898.0, 38928.0]
y_Distance_30=[344.91378555719365, 347.0861678267098, 338.5372577717445, 343.4410101654495, 344.3678345233958, 355.2548691032162, 374.13028288796863, 425.03738098769776, 527.1583494222937, 748.7074856615297, 1178.692113294533, 861.3563473323723, 473.98722196122714, 404.29904750811363, 382.71359915008657, 366.71718279293873, 354.21261295081354, 349.7352677583141, 351.51784170242627, 350.03629791722005, 349.2917595924548]
v_Distance_30=38628.0
x_Distance_301=[38478.0, 38508.0, 38538.0, 38568.0, 38598.0, 38628.0, 38658.0, 38688.0, 38718.0, 38748.0, 38778.0]
y_Distance_301=[352.35470644761875, 367.45323498502523, 422.3833700473653, 519.9508289842616, 748.509699192753, 1200.6599090398365, 874.203839730003, 468.1060305028901, 404.1572975814643, 385.27728839374413, 371.68467793016544]
v_Distance_301=38628.0
x_Distance_10=[38528.0, 38538.0, 38548.0, 38558.0, 38568.0, 38578.0, 38588.0, 38598.0, 38608.0, 38618.0, 38628.0, 38638.0, 38648.0, 38658.0, 38668.0, 38678.0, 38688.0, 38698.0, 38708.0, 38718.0, 38728.0]
y_Distance_10=[397.1064665835646, 419.66794624276656, 448.9753831608408, 476.1167931844602, 511.3794800028419, 574.0540283562495, 634.5158077843937, 743.9065707888191, 897.212801182159, 1072.35290008103, 1185.7167739216798, 1207.181883336421, 1072.8595751834291, 855.3329088004914, 662.4888231265998, 528.3424824274731, 454.807874601678, 416.2854938769806, 410.1048533324595, 398.2841483360532, 398.4454589192496]
v_Distance_10=38638.0
x_Distance_101=[38588.0, 38598.0, 38608.0, 38618.0, 38628.0, 38638.0, 38648.0, 38658.0, 38668.0, 38678.0, 38688.0]
y_Distance_101=[631.8240374874617, 751.5715045949955, 905.5819042062056, 1066.7075044238984, 1173.5251807093514, 1062.440497921597, 1039.9781358693062, 855.1407702903443, 671.0773935621154, 526.962455240284, 454.4406128885179]
v_Distance_101=38628.0
x_Distance_3=[38598.0, 38601.0, 38604.0, 38607.0, 38610.0, 38613.0, 38616.0, 38619.0, 38622.0, 38625.0, 38628.0, 38631.0, 38634.0, 38637.0, 38640.0, 38643.0, 38646.0, 38649.0, 38652.0, 38655.0, 38658.0]
y_Distance_3=[744.7633945073072, 796.8806213680729, 819.6546473208614, 884.9678117362324, 942.1492059249006, 973.9055368404729, 1042.4022849098124, 1065.7163644889067, 1123.9782428702597, 1164.0235848983461, 1177.4299816018126, 1218.6502128221287, 1202.5181937977718, 1204.5764368929688, 1154.1784479182224, 1144.7852236122167, 1089.1316119427001, 1044.4986468383966, 966.981245741885, 906.6225180974673, 839.7517115024464]
v_Distance_3=38631.0
x_Distance_1=[38616.0, 38617.0, 38618.0, 38619.0, 38620.0, 38621.0, 38622.0, 38623.0, 38624.0, 38625.0, 38626.0, 38627.0, 38628.0, 38629.0, 38630.0, 38631.0, 38632.0, 38633.0, 38634.0, 38635.0, 38636.0, 38637.0, 38638.0, 38639.0, 38640.0, 38641.0, 38642.0, 38643.0, 38644.0, 38645.0, 38646.0]
y_Distance_1=[1034.5600920492511, 1040.0016101563556, 1090.135156457713, 1092.0328079940382, 1080.2363662072617, 1121.1035466143858, 1123.0419883501643, 1140.3963923242204, 1155.8101127351338, 1175.0615652507536, 1188.1613359637604, 1182.785457101806, 1197.3388055957817, 1204.2817614012329, 1196.8477727646614, 1216.9757726021871, 1203.2096125427008, 1213.7380729837982, 1197.2004110218415, 1206.9086843029231, 1166.4208105261882, 1192.6550683523774, 1183.37387519494, 1178.09674489501, 1146.0361367407695, 1166.7073303426723, 1147.7735733262673, 1121.5436297393132, 1120.9205121362518, 1067.9503597626344, 1089.9462612494376]
v_Distance_1=38631.0

xs = [x_Distance_80, x_Distance_801, x_Distance_30, x_Distance_301, x_Distance_10, x_Distance_101, x_Distance_3, x_Distance_1]
ys =  [y_Distance_80, y_Distance_801, y_Distance_30, y_Distance_301, y_Distance_10, y_Distance_101, y_Distance_3, y_Distance_1]
fs =  [v_Distance_80, v_Distance_801, v_Distance_30, v_Distance_301, v_Distance_10, v_Distance_101, v_Distance_3, v_Distance_1]


#xs = [x_3, x_1]
#ys =  [y_3, y_1]
#fs =  [v_3, v_1]

def get_fit(X,Y):
    z = np.polyfit(X, Y, 3)
    
    print("solution:")
    print("{} x^3 + {} x^2 + {} x + {} = y".format(z[0], z[1], z[2], z[3]))
    
    p = np.poly1d(z)

    y_new = np.zeros(len(X))
    for i in range(len(X)):
        x_1 = X[i]
        y_new[i] = p(x_1)
    return y_new

fig, axs = plt.subplots(1, len(xs))
for j in range (len(xs)):
    axs[j].plot(xs[j], ys[j])
    if j >= 6:
        axs[j].plot(xs[j], get_fit(xs[j],ys[j]))
    axs[j].axvline(fs[j], color='r')
#axs[0].set_title('30 um')
#axs[1].set_title('10 um')
#axs[2].set_title('3 um')
#axs[3].set_title('1 um')

axs[0].set_title('80 um')
axs[1].set_title('80 um')
axs[2].set_title('30 um')
axs[3].set_title('30 um')
axs[4].set_title('10 um')
axs[5].set_title('10 um')
axs[6].set_title('3 um')
axs[7].set_title('1 um')

axs[0].set(xlabel='Z position (mm)')
axs[1].set(xlabel='Z position (mm)')
axs[2].set(xlabel='Z position (mm)')
axs[3].set(xlabel='Z position (mm)')
axs[4].set(xlabel='Z position (mm)')
axs[5].set(xlabel='Z position (mm)')
axs[6].set(xlabel='Z position (mm)')
axs[7].set(xlabel='Z position (mm)')
#axs[3].set(xlabel='Z position (mm)')

axs[0].set(ylabel='Focus Score')

#fig, axs = plt.subplots(2, len(xs))
#for j in range (len(xs)):
#    axs[0, j].plot(xs[j], ys[j])
#    axs[0, j].plot(xs[j], get_fit(xs[j],ys[j]))
#    axs[0, j].axvline(fs[j], color='r')
#axs[0, 0].set_title('100 um')
#axs[0, 1].set_title('30 um')
#axs[0, 2].set_title('10 um')
#axs[0, 3].set_title('3 um')
#axs[0, 4].set_title('1 um')
#
#axs[0, 0].set(xlabel='Z position (mm)')
#axs[0, 1].set(xlabel='Z position (mm)')
#axs[0, 2].set(xlabel='Z position (mm)')
#axs[0, 3].set(xlabel='Z position (mm)')
#axs[0, 4].set(xlabel='Z position (mm)')
#
#axs[0, 0].set(ylabel='Focus Score')

plt.show()
